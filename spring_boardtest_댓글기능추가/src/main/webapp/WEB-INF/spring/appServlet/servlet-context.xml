<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: DispatcherServlet의 요청 처리 인프라를 정의 -->
	
	<!-- Spring MVC @Controller 프로그래밍 모델 활성화 -->
	<annotation-driven /> <!-- @Controller, @RequestMapping과 같은 어노테이션 기반 설정을 활성화 -->

	<!-- /resources/ 디렉토리에서 이미지, CSS, JS와 같은 정적 리소스를 처리 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 컨트롤러에서 반환된 뷰 이름을 /WEB-INF/views/ 폴더 아래의 .jsp 파일로 해석 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" /> <!-- JSP 파일의 경로 접두사 -->
		<beans:property name="suffix" value=".jsp" /> <!-- JSP 파일 확장자 접미사 -->
	</beans:bean>

	<!-- 지정된 패키지에서 자동으로 Spring 빈을 탐지 -->
	<context:component-scan base-package="com.company.*" /> <!-- Spring 빈을 탐지할 패키지 지정 -->

</beans:beans>
